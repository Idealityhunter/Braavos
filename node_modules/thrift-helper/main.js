/**
 * Created by zephyre on 10/18/15.
 */

/**
 * 创建一个Thrift client
 *
 * @param service 对应的Thrift service的模块
 * @param host
 * @param port
 * @param options 包含以下选项:
 * * transport: 取值为buffered/framed, 默认为buffered
 * * protocol: 取值为binary/json/compact, 默认为binary
 * @returns {*}
 */
exports.createClient = function (service, host, port, options) {
  var thrift = require('thrift');

  var transport_map = {
    framed: thrift.TFramedTransport,
    buffered: thrift.TBufferedTransport
  };

  var protocol_map = {
    binary: thrift.TBinaryProtocol,
    json: thrift.TJSONProtocol,
    compact: thrift.TCompactProtocol
  };

  var transport_type = (options && options.transport) ? transport_map[options.transport] : thrift.TBufferedTransport;
  var protocol_type = (options&&options.protocol)?protocol_map[options.protocol]:thrift.TBinaryProtocol;

  var connection = thrift.createConnection(host, port, {
    transport: transport_type,
    protocol: protocol_type
  });

  connection.on('error', function(err) {
    console.log(err);
  });

  return thrift.createClient(service, connection);
};

